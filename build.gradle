buildscript {
    ext {
        springBootVersion = '1.4.0.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE")
        classpath('io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE')
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot' 
apply plugin: 'io.spring.dependency-management' 

jar {
    baseName = 'kataBoot'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
     flatDir {
        dirs 'lib'
    }
}


dependencies {
 
 
    compile 'org.springframework.boot:spring-boot-starter-logging'
   
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter
compile group: 'org.springframework.boot', name: 'spring-boot-starter', version: '1.4.0.RELEASE'
    
  // https://mvnrepository.com/artifact/com.thoughtworks.xstream/xstream
   compile group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.9'
  
    compile 'com.google.guava:guava:19.0'
   
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.10'
    testCompile('org.springframework.boot:spring-boot-starter-test') 
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.2.0'
    testCompile 'com.jayway.awaitility:awaitility-java8:1.6.1'
    testCompile 'com.jayway.awaitility:awaitility:1.6.5'
    testCompile 'org.springframework:spring-test'
 
}


task wrapper(type: Wrapper) {
}

import org.apache.tools.ant.filters.*

afterEvaluate {
 configure(allProcessResourcesTasks()) {
filter(ReplaceTokens,tokens: [baseName: project.jar.baseName,version: project.jar.version, gradleVersion: project.gradle.gradleVersion]
)
}
}
def allProcessResourcesTasks() {
sourceSets*.processResourcesTaskName.collect {
tasks[it]
}
}


