buildscript {
    ext {
        springBootVersion = '1.4.0.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE")
        classpath('io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE')
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot' 
apply plugin: 'io.spring.dependency-management' 

jar {
    baseName = 'kataBoot'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}



dependencies {
    compile "org.springframework.boot:spring-boot-configuration-processor"
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.data:spring-data-rest-hal-browser')
    compile('org.springframework.boot:spring-boot-starter-hateoas')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile 'org.springframework.boot:spring-boot-starter-logging'
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-devtools')
    
    
    //compile 'org.springframework.boot:spring-boot-starter-data-mongodb'
   // compile 'org.springframework.data:spring-data-mongodb:1.9.2.RELEASE'
    
    compile 'com.google.guava:guava:19.0'
    runtime('com.h2database:h2')
    
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.10'

    compile 'javax.money:money-api:1.0'
    compile 'org.javamoney:moneta:1.0'
    
    
    compile 'org.webjars:bootstrap:3.3.5'
    compile 'org.webjars:jquery:2.1.4'
    compile 'org.webjars:jquery-ui:1.11.4'
    compile 'org.webjars:jquery-ui-themes:1.11.4'
    compile ("org.webjars.bower:jquery.bootgrid:1.2.0") {
        exclude group: 'org.webjars.bower'
    }
    
    
    
    
    testCompile('org.springframework.boot:spring-boot-starter-test') 
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.2.0'
    testCompile 'com.jayway.awaitility:awaitility-java8:1.6.1'
    testCompile 'com.jayway.awaitility:awaitility:1.6.5'
    testCompile 'org.springframework:spring-test'
    
}
    compileJava.dependsOn(processResources)

task wrapper(type: Wrapper) {
}

import org.apache.tools.ant.filters.*

afterEvaluate {
 configure(allProcessResourcesTasks()) {
filter(ReplaceTokens,tokens: [baseName: project.jar.baseName,version: project.jar.version, gradleVersion: project.gradle.gradleVersion]
)
}
}
def allProcessResourcesTasks() {
sourceSets*.processResourcesTaskName.collect {
tasks[it]
}
}


